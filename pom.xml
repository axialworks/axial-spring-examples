<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.axial.spring</groupId>
        <artifactId>parent</artifactId>
        <version>1.0</version>
        <relativePath>../parent-pom/pom.xml</relativePath>
    </parent>

    <groupId>com.axial.spring</groupId>
    <artifactId>examples</artifactId>
    <version>1.0</version>

    <packaging>war</packaging>

    <name>examples</name>
    <description>Examples App</description>
    <url></url>

    <properties>

        <java.version>17</java.version>



    </properties>

    <dependencyManagement>
        <dependencies>


        </dependencies>
    </dependencyManagement>

    <dependencies>

        <!-- Axial Dependencies -->
        <dependency>
            <groupId>com.axial.spring.modules</groupId>
            <artifactId>openapi</artifactId>
            <version>1.0</version>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.commons</groupId>
                    <artifactId>commons-lang3</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.commons</groupId>
                    <artifactId>commons-collections4</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>com.axial.spring.modules</groupId>
            <artifactId>commons</artifactId>
            <version>1.0</version>
        </dependency>

        <!--
        <dependency>
            <groupId>com.axial.spring.modules</groupId>
            <artifactId>batch</artifactId>
            <version>1.0</version>
        </dependency>
        -->

    </dependencies>

    <profiles>

    </profiles>

    <build>
        <plugins>

            <plugin>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <outputFileName>openapi.json</outputFileName>
                    <outputDir>${project.build.directory}</outputDir>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>${maven-war-plugin.version}</version>
                <!--Adding a provided "spring-boot-starter-tomcat" dependency as stated in-->
                <!--here https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#howto-create-a-deployable-war-file-->
                <!--doesn't work. The generated war runs on Weblogic but the project won't run via spring-boot:run or via IDE-->
                <configuration>
                    <packagingExcludes>WEB-INF/lib/tomcat-*.jar</packagingExcludes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>pre-integration-test</id>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>post-integration-test</id>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>

        <!-- Solves @ char problem inside yml files -->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

    </build>

</project>